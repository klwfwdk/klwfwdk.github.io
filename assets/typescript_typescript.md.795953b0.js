import{_ as t,o as e,c as p,O as i}from"./chunks/framework.d98a00e9.js";const u=JSON.parse('{"title":"typescript分享","description":"","frontmatter":{"title":"typescript分享","date":"2020-07-17T00:00:00.000Z","tags":["分享"],"categories":["typescript"],"publish":false},"headers":[],"relativePath":"typescript/typescript.md","filePath":"typescript/typescript.md","lastUpdated":1683220251000}'),s={name:"typescript/typescript.md"},c=i('<h2 id="什么是typescript" tabindex="-1">什么是typescript <a class="header-anchor" href="#什么是typescript" aria-label="Permalink to &quot;什么是typescript&quot;">​</a></h2><p><code>TypeScript</code> 是 <code>JavaScript</code> 的一个超集，主要提供了类型系统和对 ES6 的支持，它由 Microsoft 开发，代码开源于 GitHub 上。</p><p>它的第一个版本发布于 2012 年 10 月，经历了多次更新后，现在已成为前端社区中不可忽视的力量，不仅在 Microsoft 内部得到广泛运用，而且 Google 开发的 Angular 从 2.0 开始就使用了 TypeScript 作为开发语言，Vue 3.0 也使用 TypeScript 进行了重构。</p><h2 id="typescript存在的意义" tabindex="-1">typescript存在的意义 <a class="header-anchor" href="#typescript存在的意义" aria-label="Permalink to &quot;typescript存在的意义&quot;">​</a></h2><ol><li>类型检查。TypeScript会在编译代码时进行严格的静态类型检查。这意味着你可以在编码阶段发现可能存在的隐患，而不必把他们带到线上。</li><li>语言扩展。TypeScript会包括来自ES6和未来提案中的特性。</li><li>工具属性。TypeScript能够编译成标准的javascript，无需运行时的任何额外开销</li><li>IDE提示功能增强。包括代码补全、接口提示、跳转到定义、重构等。比如vscode，他本身是ts编写的，同时也内置了对ts的支持</li></ol><h2 id="怎么运行-typescript" tabindex="-1">怎么运行 typescript <a class="header-anchor" href="#怎么运行-typescript" aria-label="Permalink to &quot;怎么运行 typescript&quot;">​</a></h2><p>ts实际上会被编译为js后在运行，所以运行ts包括两步</p><ol><li><code>tsc xxx.ts</code> 将ts文件编译为js文件</li><li>运行js文件</li></ol><p>当然也可以通过<code>ts-node</code></p>',9),r=[c];function a(o,l,d,n,y,_){return e(),p("div",null,r)}const f=t(s,[["render",a]]);export{u as __pageData,f as default};
